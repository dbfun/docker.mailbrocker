version: '3'
services:
  exim:
    build: ./exim
    volumes:
      # volume for store DKIM keys
      - ./ssl/dkim:/etc/ssl/certs/dkim
      # mails
      - ./var/exim/spool:/var/spool
      - ./var/exim/mail:/var/mail
    ports:
      - ${PORT_EXIM}:${PORT_EXIM}
    env_file:
      - .env
    restart: always
    hostname: ${EXIM_DOMAIN}
    networks:
      mt:
        ipv4_address: ${IP_EXIM}
    dns: ${IP_DNS_RESOLVER}
    depends_on:
      - dns
  spamassassin:
    build: ./spamassassin
    env_file:
      - .env
    hostname: spamassassin
    networks:
      mt:
        ipv4_address: ${IP_SPAMASSASSIN}
    dns: ${IP_DNS_RESOLVER}
    depends_on:
      - dns
  mongo:
    image: mongo
    hostname: mongo
    networks:
      mt:
        ipv4_address: ${IP_MONGO}
    dns: ${IP_DNS_RESOLVER}
    volumes:
      # DB
      - ./var/mongo:/data/db
    depends_on:
      - dns
  test-compose:
    build: ./test-compose
    volumes:
      # dev volumes for hot reload
      - ./test-compose:/srv/
      # test letters
      - ./test-letters:/srv/test-letters
      # volume for store DKIM keys
      - ./ssl/dkim:/etc/ssl/certs/dkim
      # configs
      - ./config/checkdelivery-mails.json:/etc/checkdelivery-mails.json
      - ./config/dnsbl-domains.json:/etc/dnsbl-domains.json
    env_file:
      - .env
    environment:
      RUN_TESTS: ${RUN_TESTS}
    hostname: test-compose
    networks:
      mt:
        ipv4_address: ${IP_TEST_COMPOSE}
    dns: ${IP_DNS_RESOLVER}
    depends_on:
      - api
      - dns
  dns:
    build: ./dns
    env_file:
      - .env
    restart: always
    hostname: dns
    networks:
      mt:
        ipv4_address: ${IP_DNS_RESOLVER}
  api:
    build: ./api
    volumes:
      # configs
      - ./config/checkdelivery-mails.json:/srv/lib/Checkdelivery/checkdelivery-mails.json
      - ./config/dnsbl-domains.json:/srv/lib/Blacklist/dnsbl-domains.json
      # SSL certificate
      - ./ssl/api/node.pem:/etc/ssl/certs/node.pem
      # dev volumes for hot reload
      - ./api/index.js:/srv/index.js
      - ./api/worker.js:/srv/worker.js
      - ./api/process-checkdelivery.js:/srv/process-checkdelivery.js
      - ./api/lib:/srv/lib
      - ./api/tools:/srv/tools
      - ./api/test:/srv/test
      # test letters
      - ./test-letters:/test-letters
    env_file:
      - .env
    restart: always
    ports:
      - ${PORT_API}:${PORT_API}
    hostname: api
    networks:
      mt:
        ipv4_address: ${IP_API}
    dns: ${IP_DNS_RESOLVER}
    depends_on:
      - dns
      - mongo
      - exim
      - spamassassin
      - rabbitmq

  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    restart: always
    networks:
      mt:
        ipv4_address: ${IP_RABBIT_MQ}
    ports:
      - ${PORT_RABBIT_MQ_HTTP}:15672
    volumes:
      - ./var/rabbitmq-mnesia/:/var/lib/rabbitmq/mnesia
    env_file:
      - .env

  clamav:
    build: ./clamav
    env_file:
      - .env
    restart: always
    hostname: clamav
    volumes:
      - ./var/clamav/data:/var/lib/clamav
      - ./var/clamav/log:/var/log/clamav
    dns: ${IP_DNS_RESOLVER}
    networks:
      mt:
        ipv4_address: ${IP_CLAMAV}


networks:
  mt:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${IP_SUBNET}
